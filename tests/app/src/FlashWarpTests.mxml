<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   initialize="initializeHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.flashwarp.*;
			
			import mx.events.FlexEvent;

			private function initializeHandler(event:FlexEvent):void
			{
				//--------------------------------------
				//  Function invokation tests
				//--------------------------------------
				
				FlashWarp.map("test_a_1", function(text:String):String{
					return "echo: " + text;
				});
				
				FlashWarp.map("test_a_2", function(text1:String, text2:String):String{
					return "echo: " + text1 + ", " + text2;
				});
				
				FlashWarp.map("test_a_3", function():void{
					return;
				});
				
				FlashWarp.map("test_a_4", function(values:Array):String{
					return values.join(", ");
				});
				
				FlashWarp.map("test_a_5", function(value:*):Object{
					if (value !== null)
						throw new ArgumentError();
					
					return null;
				});
				
				FlashWarp.map("test_a_6", function():void{
					throw new Error("Illegal operation");
				});
				
				//--------------------------------------
				//  Object tests
				//--------------------------------------
				
				FlashWarp.map("test_b_1", function(obj:Object):void{
					return;
				});
				
				FlashWarp.map("test_b_2", function(obj:Object):Object{
					obj.msg += " World";
					return obj;
				});
				
				FlashWarp.map("test_b_3", function(obj:Object):Object{
					obj.msg2.value = " " + obj.msg2.value;
					return obj;
				});
				
				//--------------------------------------
				//  Primitives tests
				//--------------------------------------
				
				FlashWarp.map("test_c_1", function(val:Boolean):Boolean{
					return val;
				});
				
				FlashWarp.map("test_c_2", function(val:int):int{
					return val - 1;
				});
				
				FlashWarp.map("test_c_3", function(val:uint):uint{
					return val;
				});
				
				FlashWarp.map("test_c_4", function(val:int):int{
					return val;
				});
				
				FlashWarp.map("test_c_5", function(val:Number):Number{
					return val;
				});
				
				FlashWarp.invoke("ready");
			}	
		]]>
	</fx:Script>

</s:Application>
